"use strict";exports.id=163,exports.ids=[163],exports.modules={95456:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{L:()=>d});var a=s(53797),i=s(44758),c=e([i]);i=(c.then?(await c)():c)[0];let d={providers:[(0,a.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{let t=await i.G.findUserByEmail(e.email);if(!t||!await i.G.verifyPassword(e.password,t.password_hash))return null;return{id:t.id.toString(),email:t.email,name:t.email,userLevel:t.user_level,credits:t.credits,wechatUpgraded:t.wechat_upgraded}}catch(e){return console.error("认证失败:",e),null}}})],callbacks:{jwt:async({token:e,user:t})=>(t&&(e.userLevel=t.userLevel,e.credits=t.credits,e.wechatUpgraded=t.wechatUpgraded),e),async session({session:e,token:t}){if(t.sub)try{let s=await i.G.findUserById(parseInt(t.sub));s&&(e.user.id=s.id.toString(),e.user.userLevel=s.user_level,e.user.credits=s.credits,e.user.wechatUpgraded=s.wechat_upgraded,e.user.isPremiumUser=await i.G.isPremiumUser(s.id),e.user.isProUser=await i.G.isProUser(s.id))}catch(e){console.error("刷新session失败:",e)}return e}},pages:{signIn:"/auth/signin"},session:{strategy:"jwt",maxAge:2592e3},secret:process.env.NEXTAUTH_SECRET};r()}catch(e){r(e)}})},18289:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{K:()=>c});var a=s(75748),i=e([a]);a=(i.then?(await i)():i)[0];class c{static{this.CREDIT_PACKAGES=[{name:"入门体验包",price:6,baseCredits:10,bonusCredits:2,totalCredits:12,description:"新用户试用"},{name:"基础使用包",price:30,baseCredits:50,bonusCredits:15,totalCredits:65,description:"轻度用户"},{name:"热门推荐包",price:98,baseCredits:170,bonusCredits:50,totalCredits:220,description:"中度用户"},{name:"专业用户包",price:198,baseCredits:350,bonusCredits:100,totalCredits:450,description:"重度用户"},{name:"商业用户包",price:328,baseCredits:600,bonusCredits:180,totalCredits:780,description:"商业用户"},{name:"企业定制包",price:648,baseCredits:1300,bonusCredits:400,totalCredits:1700,description:"企业用户"}]}static getWeekNumber(e){let t=new Date(e.getFullYear(),0,1),s=(e.getTime()-t.getTime())/864e5;return Math.ceil((s+t.getDay()+1)/7)}static async userCheckin(e,t){let s;let r=new Date,i="free"===t,c=i?"weekly":"daily";if(i){let e=r.getFullYear(),t=this.getWeekNumber(r);s=`${e}-W${t.toString().padStart(2,"0")}`}else s=r.toISOString().split("T")[0];try{if((await a.w.execute({sql:"SELECT id FROM user_checkins WHERE user_id = ? AND checkin_period = ?",args:[e,s]})).rows.length>0)return{success:!1,message:`${i?"本周":"今日"}已签到`};return await a.w.batch([{sql:"UPDATE users SET credits = credits + ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?",args:[6,e]},{sql:"INSERT INTO user_checkins (user_id, checkin_type, checkin_period, credits_awarded) VALUES (?, ?, ?, ?)",args:[e,c,s,6]}]),{success:!0,message:`签到成功，获得6积分`,creditsAwarded:6,checkinType:c}}catch(e){return console.error("用户签到失败:",e),{success:!1,message:"签到失败，请稍后重试"}}}static async getCheckinStatus(e,t){let s,r;let i=new Date,c="free"===t,d=c?"weekly":"daily";if(c){let e=i.getFullYear(),t=this.getWeekNumber(i);s=`${e}-W${t.toString().padStart(2,"0")}`,r=new Date(i.getTime()+6048e5)}else s=i.toISOString().split("T")[0],r=new Date(i.getTime()+864e5);try{let t=await a.w.execute({sql:"SELECT id FROM user_checkins WHERE user_id = ? AND checkin_period = ?",args:[e,s]});return{canCheckin:0===t.rows.length,nextCheckinTime:t.rows.length>0?r:void 0,checkinType:d}}catch(e){return console.error("检查签到状态失败:",e),{canCheckin:!1,checkinType:d}}}static async getUserCheckinHistory(e,t=30){try{return(await a.w.execute({sql:"SELECT * FROM user_checkins WHERE user_id = ? ORDER BY created_at DESC LIMIT ?",args:[e,t]})).rows.map(e=>({id:e.id,user_id:e.user_id,checkin_type:e.checkin_type,checkin_period:e.checkin_period,credits_awarded:e.credits_awarded,created_at:new Date(e.created_at)}))}catch(e){return console.error("获取签到历史失败:",e),[]}}static async purchaseCredits(e,t,s){let r=this.CREDIT_PACKAGES.find(e=>e.name===t);if(!r)return{success:!1,message:"积分包不存在"};try{return await a.w.batch([{sql:"UPDATE users SET credits = credits + ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?",args:[r.totalCredits,e]},{sql:"UPDATE users SET user_level = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?",args:["pro",e]},{sql:`INSERT INTO credit_purchases 
                (user_id, package_name, package_price, base_credits, bonus_credits, total_credits, admin_note) 
                VALUES (?, ?, ?, ?, ?, ?, ?)`,args:[e,r.name,r.price,r.baseCredits,r.bonusCredits,r.totalCredits,s||""]}]),{success:!0,message:`充值成功！获得${r.totalCredits}积分，已升级为Pro用户`,creditsAdded:r.totalCredits,newUserLevel:"pro"}}catch(e){return console.error("积分充值失败:",e),{success:!1,message:"充值失败，请联系管理员"}}}static getCreditPackages(){return this.CREDIT_PACKAGES}static async getUserPurchaseHistory(e,t=20){try{return(await a.w.execute({sql:"SELECT * FROM credit_purchases WHERE user_id = ? ORDER BY created_at DESC LIMIT ?",args:[e,t]})).rows.map(e=>({id:e.id,user_id:e.user_id,package_name:e.package_name,package_price:e.package_price,base_credits:e.base_credits,bonus_credits:e.bonus_credits,total_credits:e.total_credits,payment_method:e.payment_method,transaction_status:e.transaction_status,admin_note:e.admin_note,created_at:new Date(e.created_at)}))}catch(e){return console.error("获取充值历史失败:",e),[]}}static async createGenerationHistory(e,t,s=1,r="single"){try{let i=(await a.w.execute({sql:`INSERT INTO generation_history (user_id, credits_used, clothing_count, generation_type, status) 
              VALUES (?, ?, ?, ?, 'pending') RETURNING *`,args:[e,t,s,r]})).rows[0];return{id:i.id,user_id:i.user_id,credits_used:i.credits_used,clothing_count:i.clothing_count,generation_type:i.generation_type,status:i.status,created_at:new Date(i.created_at)}}catch(e){throw console.error("创建生成历史记录失败:",e),e}}static async updateGenerationStatus(e,t,s,r){try{let i=["status = ?"],c=[t];("completed"===t||"failed"===t)&&i.push("completed_at = CURRENT_TIMESTAMP"),s&&(i.push("error_message = ?"),c.push(s)),void 0!==r&&(i.push("processing_time = ?"),c.push(r)),c.push(e);let d=await a.w.execute({sql:`UPDATE generation_history SET ${i.join(", ")} WHERE id = ? RETURNING *`,args:c});if(0===d.rows.length)throw Error("生成历史记录不存在");let n=d.rows[0];return{id:n.id,user_id:n.user_id,credits_used:n.credits_used,clothing_count:n.clothing_count,generation_type:n.generation_type,status:n.status,error_message:n.error_message,processing_time:n.processing_time,created_at:new Date(n.created_at),completed_at:n.completed_at?new Date(n.completed_at):void 0}}catch(e){throw console.error("更新生成历史状态失败:",e),e}}static async getUserGenerationHistory(e,t=50){try{return(await a.w.execute({sql:"SELECT * FROM generation_history WHERE user_id = ? ORDER BY created_at DESC LIMIT ?",args:[e,t]})).rows.map(e=>({id:e.id,user_id:e.user_id,credits_used:e.credits_used,clothing_count:e.clothing_count,generation_type:e.generation_type,status:e.status,error_message:e.error_message,processing_time:e.processing_time,created_at:new Date(e.created_at),completed_at:e.completed_at?new Date(e.completed_at):void 0}))}catch(e){return console.error("获取生成历史失败:",e),[]}}static async getUserCreditStats(e){try{let[t,s,r]=await Promise.all([a.w.execute({sql:`SELECT 
                  COUNT(*) as total_generations,
                  COUNT(CASE WHEN status = 'completed' THEN 1 END) as successful_generations,
                  COUNT(CASE WHEN status = 'failed' THEN 1 END) as failed_generations,
                  SUM(credits_used) as total_credits_used
                FROM generation_history 
                WHERE user_id = ?`,args:[e]}),a.w.execute({sql:`SELECT 
                  COUNT(*) as total_checkins,
                  SUM(credits_awarded) as total_checkin_credits
                FROM user_checkins 
                WHERE user_id = ?`,args:[e]}),a.w.execute({sql:`SELECT 
                  COUNT(*) as total_purchases,
                  SUM(total_credits) as total_purchased_credits
                FROM credit_purchases 
                WHERE user_id = ?`,args:[e]})]),i=t.rows[0],c=s.rows[0],d=r.rows[0];return{total_generations:i.total_generations||0,successful_generations:i.successful_generations||0,failed_generations:i.failed_generations||0,total_credits_used:i.total_credits_used||0,total_checkins:c.total_checkins||0,total_checkin_credits:c.total_checkin_credits||0,total_purchases:d.total_purchases||0,total_purchased_credits:d.total_purchased_credits||0}}catch(e){return console.error("获取用户积分统计失败:",e),{total_generations:0,successful_generations:0,failed_generations:0,total_credits_used:0,total_checkins:0,total_checkin_credits:0,total_purchases:0,total_purchased_credits:0}}}}r()}catch(e){r(e)}})},44758:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{G:()=>n});var a=s(75748),i=s(67096),c=s.n(i),d=e([a]);a=(d.then?(await d)():d)[0];class n{static async createUser(e){let{email:t,password:s}=e;if(await this.findUserByEmail(t))throw Error("邮箱已被注册");let r=await c().hash(s,12),i=(await a.w.execute({sql:`INSERT INTO users (email, password_hash, user_level, credits) 
            VALUES (?, ?, ?, ?) RETURNING *`,args:[t,r,"free",6]})).rows[0];return{id:i.id,email:i.email,password_hash:i.password_hash,user_level:i.user_level,credits:i.credits,wechat_upgraded:!!i.wechat_upgraded,created_at:new Date(i.created_at),updated_at:new Date(i.updated_at)}}static async findUserByEmail(e){let t=await a.w.execute({sql:"SELECT * FROM users WHERE email = ?",args:[e]});if(0===t.rows.length)return null;let s=t.rows[0];return{id:s.id,email:s.email,password_hash:s.password_hash,user_level:s.user_level,credits:s.credits,wechat_upgraded:!!s.wechat_upgraded,created_at:new Date(s.created_at),updated_at:new Date(s.updated_at)}}static async findUserById(e){let t=await a.w.execute({sql:"SELECT * FROM users WHERE id = ?",args:[e]});if(0===t.rows.length)return null;let s=t.rows[0];return{id:s.id,email:s.email,password_hash:s.password_hash,user_level:s.user_level,credits:s.credits,wechat_upgraded:!!s.wechat_upgraded,created_at:new Date(s.created_at),updated_at:new Date(s.updated_at)}}static async verifyPassword(e,t){return await c().compare(e,t)}static async updateUser(e,t){let s=[],r=[];void 0!==t.user_level&&(s.push("user_level = ?"),r.push(t.user_level)),void 0!==t.credits&&(s.push("credits = ?"),r.push(t.credits)),void 0!==t.wechat_upgraded&&(s.push("wechat_upgraded = ?"),r.push(t.wechat_upgraded)),s.push("updated_at = CURRENT_TIMESTAMP"),r.push(e);let i=`UPDATE users SET ${s.join(", ")} WHERE id = ? RETURNING *`,c=await a.w.execute({sql:i,args:r});if(0===c.rows.length)throw Error("用户不存在");let d=c.rows[0];return{id:d.id,email:d.email,password_hash:d.password_hash,user_level:d.user_level,credits:d.credits,wechat_upgraded:!!d.wechat_upgraded,created_at:new Date(d.created_at),updated_at:new Date(d.updated_at)}}static async deductCredits(e,t){let s=await this.findUserById(e);if(!s)throw Error("用户不存在");if(s.credits<t)throw Error("积分不足");return await this.updateUser(e,{credits:s.credits-t})}static async addCredits(e,t){let s=await this.findUserById(e);if(!s)throw Error("用户不存在");return await this.updateUser(e,{credits:s.credits+t})}static async updateUserCredits(e,t){let s=await this.findUserById(e);if(!s)throw Error("用户不存在");let r=s.credits+t;if(r<0)throw Error("积分不足");return await this.updateUser(e,{credits:r})}static async getUserLevel(e){let t=await this.findUserById(e);return t?t.user_level:null}static async isPremiumUser(e){let t=await this.findUserById(e);return!!t&&("plus"===t.user_level||"pro"===t.user_level)}static async isProUser(e){let t=await this.findUserById(e);return!!t&&"pro"===t.user_level}static async upgradeToPlusUser(e){return await this.updateUser(e,{user_level:"plus",wechat_upgraded:!0})}static async upgradeToProUser(e){return await this.updateUser(e,{user_level:"pro"})}static async getUserStats(e){let[t,s]=await Promise.all([a.w.execute({sql:`SELECT 
                COUNT(*) as total_generations,
                COUNT(CASE WHEN status = 'completed' THEN 1 END) as successful_generations,
                COUNT(CASE WHEN status = 'failed' THEN 1 END) as failed_generations,
                SUM(credits_used) as total_credits_used
              FROM generation_history 
              WHERE user_id = ?`,args:[e]}),a.w.execute({sql:"SELECT credits FROM users WHERE id = ?",args:[e]})]),r=t.rows[0],i=s.rows[0];return{total_generations:r.total_generations||0,successful_generations:r.successful_generations||0,failed_generations:r.failed_generations||0,total_credits_used:r.total_credits_used||0,current_credits:i?.credits||0}}}r()}catch(e){r(e)}})},75748:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{w:()=>c});var a=s(84629),i=e([a]);a=(i.then?(await i)():i)[0];let c=(0,a.createClient)({url:process.env.TURSO_DATABASE_URL,authToken:process.env.TURSO_AUTH_TOKEN});r()}catch(e){r(e)}})}};